{"version":3,"file":"static/js/98.370d5e4d.chunk.js","mappings":"sOAoCA,EA/BsB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMC,OAJDC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EACjC,GAAE,CAACJ,IAEEG,GAKF,8BACKA,EAAOK,OAAS,GAET,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAA5D,SACKV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,yBACI,UAACR,EAAA,EAAD,CAAKE,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAApD,WACI,wBAAKG,KACL,uBAAIC,QAHHF,EADD,OASjB,uEAjBL,IAoBb,C,mPChCKG,EAAU,mCAIHC,EAAU,6BACVC,EAAQ,OAErBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,WATR,WASQ,YARN,QAQM,YAPL,QAShB,CACEE,OAAQ,CACNC,QAASN,KALkB,cAC3BO,EAD2B,yBAS1BA,EAASC,KAAKC,SATY,2CAAH,qDAYnBC,EAAc,mCAAG,WAAMb,GAAN,uFACRM,EAAAA,EAAAA,IAAA,iBAAoBN,GAAM,CAC5CQ,OAAQ,CACNC,QAASN,KAHe,cACtBW,EADsB,yBAMrBA,EAAMH,MANe,2CAAH,sDASdI,EAAa,mCAAG,WAAMf,GAAN,uFACPM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,YAAkC,CACpDQ,OAAQ,CACNC,QAASN,KAHc,cACrBW,EADqB,yBAMpBA,EAAMH,KAAKK,MANS,2CAAH,sDASbzB,EAAe,mCAAG,WAAMS,GAAN,uFACTM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,YAAkC,CACpDQ,OAAQ,CACNC,QAASN,KAHgB,cACvBW,EADuB,yBAMtBA,EAAMH,KAAKC,SANW,2CAAH,sDASfK,EAAyB,mCAAG,WAAMC,GAAN,uFACnBZ,EAAAA,EAAAA,IAAA,gBAA2B,CAC7CE,OAAQ,CACNC,QAASN,EACTgB,MAAOD,KAJ4B,cACjCJ,EADiC,yBAOhCA,EAAMH,KAAKC,SAPqB,2CAAH,qD","sources":["components/Review/Review.jsx","services/fetchMoviesApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviewById } from 'services/fetchMoviesApi';\nimport Box from 'components/Box';\n\nexport const Review = () => {\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n\n    useEffect(() => {\n        fetchReviewById(movieId).then(setReview);\n    }, [movieId]);\n\n     if (!review) {\n       return null;\n     }\n\n    return (\n        <>\n            {review.length > 0 ?\n                (\n                    <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={4}>\n                        {review.map(({ id, author, content }) => (\n                            <li key={id}>\n                                <Box display=\"flex\" flexDirection=\"column\" gridGap={3}>\n                                    <h3>{author}</h3>\n                                    <p>{content}</p>\n                                </Box>\n                            </li>\n                        ))}\n                    </Box>\n                ):(<p>We don't have any reviews for this movie.</p>)}\n      </>\n    );\n};\n\nexport default Review;","import axios from 'axios';\n\nconst API_KEY = 'd984b4c758c2885930eb52b6130716de';\nconst TRENDING = 'trending';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nexport const IMG_URL = 'https://image.tmdb.org/t/p';\nexport const WIDTH = 'w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const movie = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const fetchCastById = async id => {\n  const movie = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data.cast;\n};\n\nexport const fetchReviewById = async id => {\n  const movie = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data.results;\n};\n\nexport const fetchReviewBySearchedWord = async word => {\n  const movie = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: word,\n    },\n  });\n  return movie.data.results;\n};\n"],"names":["movieId","useParams","useState","review","setReview","useEffect","fetchReviewById","then","length","Box","as","display","flexDirection","gridGap","map","id","author","content","API_KEY","IMG_URL","WIDTH","axios","fetchTrendingMovies","params","api_key","response","data","results","fetchMovieById","movie","fetchCastById","cast","fetchReviewBySearchedWord","word","query"],"sourceRoot":""}
{"version":3,"file":"static/js/166.1baa849d.chunk.js","mappings":"wMAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6OAEP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEH,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAnB,IAGY,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,OAAnB,IACZ,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOG,KAAnB,IAGD,SAAAN,GAAC,OAAIA,EAAEC,MAAME,OAAOE,OAAnB,I,SCXDE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACXC,EAAOF,EAASG,SAEtB,OACE,wBACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACV,yBACE,SAACnB,EAAD,CACEoB,GAAa,YAATN,EAAA,kBAAgCG,GAAhC,iBAAiDA,GACrDI,MAAO,CAAEC,KAAMV,GAFjB,gBAIGM,QAJH,IAIGA,EAAAA,EAAQC,KALJF,EADC,KAYjB,C,+GCrBYM,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3C,OACE,kBAAMD,SAAUA,EAAhB,WACE,kBACEE,KAAK,OACLH,MAAOA,EACPE,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOL,MAAtB,KAEb,mBAAQG,KAAK,SAAb,sBAGL,E,8BCuCD,EA3Ce,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAClD,GAA0BN,EAAAA,EAAAA,UAASK,GAAnC,eAAOX,EAAP,KAAca,EAAd,KAwBA,OAVAC,EAAAA,EAAAA,YAAU,WACHH,IAILI,EAAAA,EAAAA,IAA0BJ,GACvBK,KAAKT,GACLU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,iCACE,SAACU,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAACvB,EAAD,CACAC,MAAOA,EACPC,SAvBe,SAAAG,GAEnB,GADAA,EAAEmB,iBACY,KAAVvB,EACF,OAAOwB,MAAM,6BAEfd,EAAgB,CAAEe,MAAOzB,GAC1B,EAkBKE,SA5BoB,SAAAuB,GACxBZ,EAASY,EACV,OA8BG,yBAAMtC,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,QAGzC,C,mPC9CKuC,EAAU,mCAIHC,EAAU,6BACVC,EAAQ,OAErBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,WATR,WASQ,YARN,QAQM,YAPL,QAShB,CACEE,OAAQ,CACNC,QAASN,KALkB,cAC3BO,EAD2B,yBAS1BA,EAASC,KAAKC,SATY,2CAAH,qDAYnBC,EAAc,mCAAG,WAAM3C,GAAN,uFACRoC,EAAAA,EAAAA,IAAA,iBAAoBpC,GAAM,CAC5CsC,OAAQ,CACNC,QAASN,KAHe,cACtBW,EADsB,yBAMrBA,EAAMH,MANe,2CAAH,sDASdI,EAAa,mCAAG,WAAM7C,GAAN,uFACPoC,EAAAA,EAAAA,IAAA,iBAAoBpC,EAApB,YAAkC,CACpDsC,OAAQ,CACNC,QAASN,KAHc,cACrBW,EADqB,yBAMpBA,EAAMH,KAAKK,MANS,2CAAH,sDASbC,EAAe,mCAAG,WAAM/C,GAAN,uFACToC,EAAAA,EAAAA,IAAA,iBAAoBpC,EAApB,YAAkC,CACpDsC,OAAQ,CACNC,QAASN,KAHgB,cACvBW,EADuB,yBAMtBA,EAAMH,KAAKC,SANW,2CAAH,sDASfpB,EAAyB,mCAAG,WAAM0B,GAAN,uFACnBZ,EAAAA,EAAAA,IAAA,gBAA2B,CAC7CE,OAAQ,CACNC,QAASN,EACTD,MAAOgB,KAJ4B,cACjCJ,EADiC,yBAOhCA,EAAMH,KAAKC,SAPqB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/fetchMoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavItem = styled(NavLink)`\n  display: block;\n  padding: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  border-radius: 8px;\n  &.active {\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n  :hover:not(.active) {\n    color: ${p => p.theme.colors.primary};\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { NavItem } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const path = location.pathname;\n\n  return (\n    <ul>\n      {movies.map(({ id, name, title }) => (\n        <li key={id}>\n          <NavItem\n            to={path === '/movies' ? `/movies/${id}` : `movies/${id}`}\n            state={{ from: location }}\n          >\n            {name ?? title}\n          </NavItem>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const SearchBar = ({ value, onSubmit, onChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar';\nimport { MoviesList } from 'components/MoviesList';\nimport { fetchReviewBySearchedWord } from 'services/fetchMoviesApi';\nimport Box from 'components/Box';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchedWord = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(searchedWord);\n\n  const updateQueryString = query => {\n    setValue(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert('Please fill in the field!');\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!searchedWord) {\n      return;\n    }\n\n    fetchReviewBySearchedWord(searchedWord)\n      .then(setMovies)\n      .catch(error => console.log(error));\n  }, [searchedWord]);\n\n  return (\n    <>\n      <Box ml={4}>\n        <SearchBar\n        value={value}\n        onSubmit={handleSubmit}\n        onChange={updateQueryString}\n      />\n      </Box>\n      \n      <div>{movies && <MoviesList movies={movies} />}</div>\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = 'd984b4c758c2885930eb52b6130716de';\nconst TRENDING = 'trending';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nexport const IMG_URL = 'https://image.tmdb.org/t/p';\nexport const WIDTH = 'w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const movie = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const fetchCastById = async id => {\n  const movie = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data.cast;\n};\n\nexport const fetchReviewById = async id => {\n  const movie = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data.results;\n};\n\nexport const fetchReviewBySearchedWord = async word => {\n  const movie = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: word,\n    },\n  });\n  return movie.data.results;\n};\n"],"names":["NavItem","styled","NavLink","p","theme","space","colors","text","primary","white","MoviesList","movies","location","useLocation","path","pathname","map","id","name","title","to","state","from","SearchBar","value","onSubmit","onChange","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchedWord","get","setValue","useEffect","fetchReviewBySearchedWord","then","catch","error","console","log","Box","ml","preventDefault","alert","query","API_KEY","IMG_URL","WIDTH","axios","fetchTrendingMovies","params","api_key","response","data","results","fetchMovieById","movie","fetchCastById","cast","fetchReviewById","word"],"sourceRoot":""}